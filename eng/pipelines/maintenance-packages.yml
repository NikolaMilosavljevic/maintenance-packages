trigger:
  batch: true
  branches:
    include:
    - main
    - release/*

variables:
- name: LinuxImage
  value: 1es-ubuntu-2204-pt
- name: WindowsImage
  value: 1es-windows-2022-pt
- template: /eng/pipelines/common-variables.yml@self
- template: /eng/common/templates-official/variables/pool-providers.yml@self

- ${{ if eq(variables['_RunAsPublic'], 'true') }}:
  - name: _AdditionalBuildArgs
    value: ''
  - name: _BuildJobDisplayName
    value: 'Build and Test'
- ${{ else }}:
  - name: _AdditionalBuildArgs
    value: '/p:Test=false'
  - name: _BuildJobDisplayName
    value: 'Build, Sign and Publish'

resources:
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    featureFlags:
      autoBaseline: true
    sdl:
      binskim:
        enabled: true
        scanOutputDirectoryOnly: true
    pool:
      name: $(DncEngInternalBuildPool)
      image: $(WindowsImage)
      os: windows
    containers:
      LinuxContainer:
        image: mcr.microsoft.com/dotnet-buildtools/prereqs:cbl-mariner-2.0-fpm
    stages:
    - stage: build
      displayName: CI
      jobs:
      - template: /eng/common/templates-official/jobs/jobs.yml@self
        parameters:
          artifacts:
            publish:
              artifacts: false
              logs: true
              manifests: true
          enableMicrobuild: true
          enablePublishUsingPipelines: true
          publishAssetsImmediately: true
          enablePublishTestResults: true
          testResultsFormat: vstest
          enableSourceIndex: ${{ and(eq(variables._RunAsInternal, True), eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}
          workspace:
            clean: all
          jobs:
          - job: build_windows
            displayName: 'Build Windows'
            timeoutInMinutes: 60
            pool:
              name: $(DncEngInternalBuildPool)
              image: $(WindowsImage)
              os: windows
            preSteps:
            - checkout: self
              fetchDepth: 0
              clean: true
            steps:
            - script: eng\common\cibuild.cmd
                -configuration Release
                -prepareMachine
                $(_AdditionalBuildArgs)
                $(_InternalBuildArgs)
              displayName: $(_BuildJobDisplayName)

          - job: build_linux
            displayName: 'Build Linux'
            timeoutInMinutes: 60
            container: LinuxContainer
            pool:
              vmImage: ubuntu-latest
            strategy:
              matrix:
                debug:
                  _BuildConfig: Release
            preSteps:
            - checkout: self
              clean: true
            steps:
            - script: eng/common/cibuild.sh
                --configuration $(_BuildConfig)
                --prepareMachine
                $(_AdditionalBuildArgs)
                $(_InternalBuildArgs)
              displayName: $(_BuildJobDisplayName)

          - job: pack_linux
            displayName: 'Pack Linux'
            timeoutInMinutes: 60
            container: LinuxContainer
            pool:
              vmImage: ubuntu-latest
            strategy:
              matrix:
                release:
                  _BuildConfig: Release
            preSteps:
            - checkout: self
              clean: true
            steps:
            - script: eng/common/cibuild.sh
                --configuration $(_BuildConfig)
                --prepareMachine
                /p:SkipTests=true
                /p:IsPackable=true
                $(_AdditionalBuildArgs)
                $(_InternalBuildArgs)
              displayName: 'Build and pack'

          - job: build_linux_installers
            displayName: 'Build Linux Installers'
            timeoutInMinutes: 60
            container: LinuxContainer
            pool:
              vmImage: ubuntu-latest
            strategy:
              matrix:
                release:
                  _BuildConfig: Release
            preSteps:
            - checkout: self
              clean: true
            steps:
            - script: eng/common/cibuild.sh
                --configuration $(_BuildConfig)
                --prepareMachine
                /p:BuildInstallers=true
                /p:BuildRpmPackage=true
                /p:TargetOS=linux
                /p:TargetArchitecture=x64
                $(_AdditionalBuildArgs)
                $(_InternalBuildArgs)
              displayName: 'Build Linux Installers'

    - ${{ if eq(variables._RunAsInternal, True) }}:
      - template: /eng/common/templates-official/post-build/post-build.yml@self
        parameters:
          publishAssetsImmediately: true